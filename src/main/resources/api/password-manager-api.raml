#%RAML 1.0
title: Password Sharing API
version: v1

types:
  PasswordEntry:
    type: object
    properties:
      title:
        type: string
        required: true
        example: Salesforce-UAT
        pattern: ^[a-zA-Z0-9\-_\/]+$
      description:
        type: string
        example: User acceptance testing credentials
      password:
        type: string
        required: true
        description: Encrypted password string
      approval?:
        type: boolean
        default: false
      approver?:
        type: string
        pattern: .+@.+\..+
        description: Approver email address
      tokens?:
        type: array
        items:
          string
        description: tokens created for approved users
  
/passwords:
  post:
    description: Create a new password entry
    body:
      application/json:
        type: PasswordEntry
    responses:
      201:
        body:
          application/json:
            example:
              message: Password entry created successfully

  get:
    description: Search passwords by text and description
    queryParameters:
      query:
        type: string
        required: true
        example: "Salesforce"
    responses:
      200:
        body:
          application/json:
            type: array
            items:
              properties:
                id:
                  type: string
                title:
                  type: string
                description:
                  type: string

/passwords/{title}:
  uriParameters:
    title:
      type: string
  get:
    description: Returns the password details
    queryParameters:
      requester:
        type: string
        pattern: .+@.+\..+
        required: false
    responses:
      200:
        body:
          application/json:
            type: PasswordEntry
            description: Return decrypted password when there's no approval
      201:
        body:
          application/json:
            type: PasswordEntry
            description: Return approval needed with the requester parameter
  put:
    description: Update the password entry
    body:
      application/json:
        type: PasswordEntry
    responses:
      200:
        description: Password entry updated
  delete:
    description: Deletes a password entry
    responses:
      204:
        description: Entry deleted successfully
/password/{id}/approved/{hash}:
  post:
    description: Approve the password access request.
    body:
      application/json:
        type: PasswordEntry
    responses:
      200:
        description: An email has been sent informing of the approval.
/sync:
  get:
    description: Sync the objecto store to file     
/database:
  get:
    description: Returns a csv file of all data in encrypted format
    responses:
      200:
        body:
          text/csv:
        headers:
          Content-Disposition:
            example: attachment; filename="database.csv"

  post:
    description: Restores the database from a csv file
    displayName: Restore Database
    body:
      application/octet-stream:
        fileTypes: ['text/csv']
    responses:
      201:
        description: Database restored